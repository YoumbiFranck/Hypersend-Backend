# Default profile configuration (for local development with IDE)
server:
  port: 8080

spring:
  application:
    name: api-gateway

  jackson:
    serialization:
      indent_output: true
    default-property-inclusion: non_null

# Application configuration
app:
  # Gateway secret for internal service authentication
  gateway:
    secret: ${GATEWAY_SECRET:shared_secret_key}

  # Internal service URLs
  register-service:
    url: ${REGISTER_SERVICE_URL:http://localhost:8081}

  login-service:
    url: ${LOGIN_SERVICE_URL:http://localhost:8082}

  message-service:
    url: ${MESSAGE_SERVICE_URL:http://localhost:8083}

  # CORS configuration
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}

# JWT Configuration (must match login service)
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}

# Logging configuration
logging:
  level:
    com.thm_modul.api_gateway: DEBUG
    org.springframework.security: INFO
    org.springframework.web.client.RestTemplate: DEBUG
    org.springframework.web.cors: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized

---
# Docker profile configuration (when running inside containers)
spring:
  config:
    activate:
      on-profile: docker

  jackson:
    serialization:
      indent_output: false

# Application configuration for Docker
app:
  gateway:
    secret: ${GATEWAY_SECRET:shared_secret_key}

  # Internal service URLs in Docker network
  register-service:
    url: ${REGISTER_SERVICE_URL:http://hps_register_user:8081}

  login-service:
    url: ${LOGIN_SERVICE_URL:http://hps_login_user:8082}

  message-service:
    url: ${MESSAGE_SERVICE_URL:http://hps_message_service:8083}

  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}

# JWT Configuration (same for all profiles)
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}

# Logging configuration for containerized environment
logging:
  level:
    com.thm_modul.api_gateway: INFO
    org.springframework.security: WARN
    org.springframework.web.client.RestTemplate: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints (same for all profiles)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always